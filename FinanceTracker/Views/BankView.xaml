<UserControl
	x:Class="FinanceTracker.Views.BankView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:controls="clr-namespace:Win10Themables.Controls;assembly=Win10Themables"
	xmlns:controls1="clr-namespace:CoreUtilities.Controls;assembly=CoreUtilities"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:FinanceTracker.Views"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:models="clr-namespace:FinanceTracker.Core.Models;assembly=FinanceTracker.Core"
	xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
	xmlns:vms="clr-namespace:FinanceTracker.Core.ViewModels;assembly=FinanceTracker.Core"
	mc:Ignorable="d">
	<UserControl.Resources>
		<DataTemplate DataType="{x:Type vms:AccountViewModel}">
			<local:AccountView />
		</DataTemplate>
		<!--#region Account item template-->
		<DataTemplate x:Key="AccountItemTemplate" DataType="{x:Type vms:AccountViewModel}">
			<Grid>
				<controls:ExtendedButton
					x:Name="Button"
					Width="Auto"
					Height="Auto"
					Margin="10"
					HorizontalAlignment="Stretch"
					HorizontalContentAlignment="Stretch"
					Background="{DynamicResource StatusTextLightBrush}"
					BorderBrush="{DynamicResource StatusTextBrush}"
					BorderThickness="0"
					Command="{Binding SetVisibleAccountCommand}"
					CornerRadius="10"
					MouseDownColour="{DynamicResource DisabledControlClickablePartBrush}"
					MouseOverColour="{DynamicResource DisabledControlNonClickablePartBrush}">
					<controls:ExtendedButton.Effect>
						<DropShadowEffect
							BlurRadius="10"
							Opacity="0.5"
							ShadowDepth="0"
							Color="Black" />
					</controls:ExtendedButton.Effect>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Label
							Width="Auto"
							Margin="6,0"
							Content="{Binding Name}"
							FontSize="15"
							FontWeight="DemiBold"
							Foreground="{DynamicResource TextBrush}" />
						<Border
							Height="1"
							Margin="5,0,0,0"
							VerticalAlignment="Bottom"
							Background="{DynamicResource StatusTextBrush}" />
						<Border
							Grid.RowSpan="2"
							Grid.Column="1"
							Width="1"
							Margin="0,5"
							HorizontalAlignment="Left"
							Background="{DynamicResource StatusTextBrush}" />
						<Label
							Grid.Row="1"
							Margin="6,0"
							HorizontalContentAlignment="Left"
							Content="{Binding Total, Converter={StaticResource CurrencyFormatterConverter}}"
							FontSize="15"
							Foreground="{DynamicResource TextBrush}" />
						<controls:ExtendedButton
							Grid.RowSpan="2"
							Grid.Column="2"
							Width="25"
							Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}"
							Margin="5"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Background="Transparent"
							BorderThickness="0"
							Command="{Binding RequestDeleteCommand}"
							CornerRadius="5"
							MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
							MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}"
							ToolTip="Delete">
							<controls:ExtendedButton.Style>
								<Style TargetType="{x:Type controls:ExtendedButton}">
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="False">
											<Setter Property="Background" Value="White" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</controls:ExtendedButton.Style>
							<Grid>
								<Border
									Width="12"
									Height="15"
									Margin="0,5,0,0"
									BorderBrush="{DynamicResource StatusTextBrush}"
									BorderThickness="2"
									CornerRadius="0,0,2,2" />
								<Border
									Width="1"
									Height="7"
									Margin="6,5,6,0"
									HorizontalAlignment="Left"
									BorderBrush="{DynamicResource StatusTextBrush}"
									BorderThickness="2" />
								<Border
									Width="1"
									Height="7"
									Margin="6,5,6,0"
									HorizontalAlignment="Right"
									BorderBrush="{DynamicResource StatusTextBrush}"
									BorderThickness="2" />
								<Border
									Width="16"
									Height="2"
									Margin="0,2,0,0"
									VerticalAlignment="Top"
									BorderBrush="{DynamicResource StatusTextBrush}"
									BorderThickness="2"
									CornerRadius="0,0,3,3" />
								<Border
									Width="5"
									Height="2"
									Margin="0,0,0,0"
									VerticalAlignment="Top"
									BorderBrush="{DynamicResource StatusTextBrush}"
									BorderThickness="2"
									CornerRadius="0,0,3,3" />
							</Grid>
						</controls:ExtendedButton>
						<Border
							Grid.RowSpan="2"
							Width="6"
							Margin="0,0,0,0"
							HorizontalAlignment="Left"
							Background="{DynamicResource ThemeMouseOverBrush}"
							CornerRadius="10,0,0,10"
							Visibility="{Binding IsSelected, Converter={StaticResource VisibleIfTrueConverter}}" />
					</Grid>
				</controls:ExtendedButton>
			</Grid>
		</DataTemplate>
		<!--#endregion-->
		<!--#endregion-->
	</UserControl.Resources>
	<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<!--#region Top bar-->
		<Grid Background="{DynamicResource DisabledControlClickablePartBrush}" />
		<Grid Grid.Row="0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<!--#region Bank icon, name and renaming-->
			<!--#region Bank image-->
			<svgc:SvgViewbox
				Grid.Row="0"
				Grid.Column="0"
				Height="30"
				MaxWidth="30"
				Margin="15,5,0,5"
				Source="{Binding Name, Converter={StaticResource BankNameIconConverter}}"
				Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource VisibleIfNotNullConverter}}" />
			<!--#endregion-->
			<!--#region Name label-->
			<Label
				x:Name="NameLabel"
				Grid.Row="0"
				Grid.Column="1"
				Margin="10,5"
				VerticalAlignment="Top"
				Content="{Binding Name}"
				FontSize="20"
				FontWeight="Bold"
				Foreground="{DynamicResource TextBrush}"
				Visibility="{Binding ElementName=NameTextbox, Path=Visibility, Converter={StaticResource VisibilityInverterConverter}}" />
			<!--#endregion-->
			<!--#region Edit name textbox-->
			<TextBox
				x:Name="NameTextbox"
				Grid.Row="0"
				Grid.Column="1"
				Width="{Binding ElementName=NameLabel, Path=ActualWidth}"
				Margin="13,10,6,9"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Background="{DynamicResource DisabledControlClickablePartBrush}"
				BorderBrush="{DynamicResource TextBrush}"
				BorderThickness="0,0,0,1"
				FontSize="20"
				FontWeight="Bold"
				Foreground="{DynamicResource TextBrush}"
				IsVisibleChanged="NameTextbox_IsVisibleChanged"
				Text="{Binding TemporaryName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
				Visibility="{Binding IsEditingName, Converter={StaticResource VisibleIfTrueConverter}}">
				<b:Interaction.Triggers>
					<b:EventTrigger EventName="PreviewKeyDown">
						<b:InvokeCommandAction Command="{Binding NameEditorKeyDownCommand}" PassEventArgsToCommand="True" />
					</b:EventTrigger>
				</b:Interaction.Triggers>
			</TextBox>
			<!--#endregion-->
			<!--#region Rename button-->
			<controls:ExtendedButton
				x:Name="RenameButton"
				Grid.Row="0"
				Grid.Column="2"
				Width="18"
				Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}"
				Margin="0,7,0,3"
				HorizontalAlignment="Left"
				VerticalAlignment="Center"
				Background="{DynamicResource ControlClickablePartBrush}"
				BorderThickness="0"
				Command="{Binding EditNameCommand}"
				CornerRadius="5"
				MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
				MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}"
				ToolTip="Edit name">
				<!--#region Button icon-->
				<Grid
					Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-3}"
					Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualHeight, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-3}"
					Margin="-1,0,0,0">
					<Line
						Stroke="{DynamicResource StatusTextBrush}"
						StrokeEndLineCap="Triangle"
						StrokeThickness="4"
						X1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-4}"
						X2="3"
						Y1="4"
						Y2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-3}" />
					<Line
						Stroke="{DynamicResource StatusTextBrush}"
						StrokeThickness="4"
						X1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-1}"
						X2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-3}"
						Y1="1"
						Y2="3" />
				</Grid>
				<!--#endregion-->
			</controls:ExtendedButton>
			<!--#endregion-->
			<!--#endregion-->
			<!--#region Data import/linking controls-->
			<Grid
				Grid.Column="3"
				Margin="10,0"
				HorizontalAlignment="Right">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<!--#region Link bank button-->
				<controls:ExtendedButton
					x:Name="LinkBankButton"
					Grid.Column="0"
					Margin="0,6,0,3"
					Padding="10,3"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Background="{DynamicResource ControlClickablePartBrush}"
					BorderThickness="0"
					Command="{Binding LinkBankCommand}"
					CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, ConverterParameter=0.5, Converter={StaticResource ValueMultiplierConverter}}"
					DisabledBackgroundColour="{DynamicResource ControlNonClickablePartBrush}"
					DisabledForegroundColour="{DynamicResource StatusTextBrush}"
					Foreground="{DynamicResource TextBrush}"
					MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
					MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}"
					ToolTip="Link bank using TrueLayer (opens in browser)">
					<controls:ExtendedButton.IsEnabled>
						<MultiBinding Converter="{StaticResource MultiBoolOrConverter}">
							<Binding
								Converter="{StaticResource BankLinkStatusIsConverterParameterConverter}"
								ConverterParameter="{x:Static models:BankLinkStatus.NotLinked}"
								Path="LinkStatus" />
							<Binding
								Converter="{StaticResource BankLinkStatusIsConverterParameterConverter}"
								ConverterParameter="{x:Static models:BankLinkStatus.Linking}"
								Path="LinkStatus" />
						</MultiBinding>
					</controls:ExtendedButton.IsEnabled>
					<!--#region Button contents-->
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<!--#region Button text-->
						<Label
							Margin="0"
							Padding="0"
							Content="{Binding LinkStatus, Converter={StaticResource EnumDescriptionGetterConverter}}">
							<Label.Style>
								<Style TargetType="{x:Type Label}">
									<Style.Triggers>
										<Trigger Property="IsEnabled" Value="False">
											<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=DisabledForegroundColour}" />
										</Trigger>
										<Trigger Property="IsEnabled" Value="True">
											<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=Foreground}" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</Label.Style>
						</Label>
						<!--#endregion-->
						<!--#region Linked icon-->
						<Border
							Grid.Column="6"
							Width="16"
							Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
							Margin="6,0,0,0"
							VerticalAlignment="Center"
							Background="LimeGreen"
							BorderThickness="0"
							CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
							ToolTip="TrueLayer API poll successful">
							<Border.Style>
								<Style>
									<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
								</Style>
							</Border.Style>
							<Border.Visibility>
								<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
									<Binding
										Converter="{StaticResource BankLinkStatusIsConverterParameterConverter}"
										ConverterParameter="{x:Static models:BankLinkStatus.LinkVerified}"
										Path="LinkStatus" />
								</MultiBinding>
							</Border.Visibility>
							<Grid
								Width="6"
								Height="6"
								HorizontalAlignment="Center"
								VerticalAlignment="Center">
								<Line
									Stroke="{DynamicResource TextBrush}"
									StrokeThickness="1"
									X1="0"
									X2="2"
									Y1="3"
									Y2="6" />
								<Line
									Stroke="{DynamicResource TextBrush}"
									StrokeThickness="1"
									X1="2"
									X2="6"
									Y1="6"
									Y2="0" />
							</Grid>
						</Border>
						<!--#endregion-->
						<!--#region Link broken icon-->
						<Border
							Grid.Column="6"
							Width="16"
							Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
							Margin="6,0,0,0"
							VerticalAlignment="Center"
							Background="Red"
							BorderThickness="0"
							CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
							ToolTip="TrueLayer API poll failed">
							<Border.Style>
								<Style>
									<Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
								</Style>
							</Border.Style>
							<Border.Visibility>
								<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
									<Binding
										Converter="{StaticResource BankLinkStatusIsConverterParameterConverter}"
										ConverterParameter="{x:Static models:BankLinkStatus.LinkBroken}"
										Path="LinkStatus" />
								</MultiBinding>
							</Border.Visibility>
							<Grid
								Width="6"
								Height="6"
								HorizontalAlignment="Center"
								VerticalAlignment="Center">
								<Line
									Stroke="{DynamicResource TextBrush}"
									StrokeThickness="1"
									X1="0"
									X2="6"
									Y1="0"
									Y2="6" />
								<Line
									Stroke="{DynamicResource TextBrush}"
									StrokeThickness="1"
									X1="0"
									X2="6"
									Y1="6"
									Y2="0" />
							</Grid>
						</Border>
						<!--#endregion-->
						<!--#region Cancel linking button-->
						<controls:ExtendedButton
							Grid.Column="6"
							Width="16"
							Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
							Margin="6,0,0,0"
							Padding="-3,-3"
							VerticalAlignment="Center"
							Background="{DynamicResource ControlClickablePartBrush}"
							BorderThickness="0"
							Command="{Binding CancelBankLinkCommand}"
							CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
							MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
							MouseOverColour="{DynamicResource StatusTextBrush}"
							ToolTip="Cancel">
							<controls:ExtendedButton.Visibility>
								<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
									<Binding
										Converter="{StaticResource BankLinkStatusIsConverterParameterConverter}"
										ConverterParameter="{x:Static models:BankLinkStatus.Linking}"
										Path="LinkStatus" />
								</MultiBinding>
							</controls:ExtendedButton.Visibility>
							<!--#region Button icon-->
							<Grid
								Width="6"
								Height="6"
								HorizontalAlignment="Center"
								VerticalAlignment="Center">
								<Line
									Stroke="{DynamicResource TextBrush}"
									StrokeThickness="1"
									X1="0"
									X2="6"
									Y1="0"
									Y2="6" />
								<Line
									Stroke="{DynamicResource TextBrush}"
									StrokeThickness="1"
									X1="0"
									X2="6"
									Y1="6"
									Y2="0" />
							</Grid>
							<!--#endregion-->
						</controls:ExtendedButton>
						<!--#endregion-->
						<!--#region Progress bar-->
						<controls:CircularProgressBar
							Grid.Column="1"
							Width="20"
							Height="20"
							Margin="6,-5,0,-5"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							IsHitTestVisible="False"
							IsIndeterminate="True"
							SegmentColor="{DynamicResource ThemeMouseOverBrush}"
							StrokeThickness="3">
							<controls:CircularProgressBar.Visibility>
								<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
									<Binding
										Converter="{StaticResource BankLinkStatusIsConverterParameterConverter}"
										ConverterParameter="{x:Static models:BankLinkStatus.Linking}"
										Path="LinkStatus" />
								</MultiBinding>
							</controls:CircularProgressBar.Visibility>
						</controls:CircularProgressBar>
						<!--#endregion-->
					</Grid>
					<!--#endregion-->
				</controls:ExtendedButton>
				<!--#endregion-->
				<!--#region Unlink bank button-->
				<controls:ExtendedButton
					Grid.Column="1"
					Width="{Binding ElementName=LinkBankButton, Path=ActualHeight}"
					Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
					Margin="6,6,0,3"
					Padding="-3,-3"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Background="{DynamicResource ControlClickablePartBrush}"
					BorderThickness="0"
					Command="{Binding UnlinkBankCommand}"
					CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
					Foreground="{DynamicResource StatusTextBrush}"
					MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
					MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}"
					ToolTip="Unlink bank">
					<controls:ExtendedButton.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolOrToVisibilityConverter}">
							<Binding
								Converter="{StaticResource BankLinkStatusIsConverterParameterConverter}"
								ConverterParameter="{x:Static models:BankLinkStatus.LinkVerified}"
								Path="LinkStatus" />
							<Binding
								Converter="{StaticResource BankLinkStatusIsConverterParameterConverter}"
								ConverterParameter="{x:Static models:BankLinkStatus.LinkBroken}"
								Path="LinkStatus" />
						</MultiBinding>
					</controls:ExtendedButton.Visibility>
					<Grid
						Width="10"
						Height="10"
						HorizontalAlignment="Center"
						VerticalAlignment="Center">
						<Line
							Stroke="{DynamicResource TextBrush}"
							StrokeThickness="1.5"
							X1="0"
							X2="10"
							Y1="0"
							Y2="10" />
						<Line
							Stroke="{DynamicResource TextBrush}"
							StrokeThickness="1.5"
							X1="0"
							X2="10"
							Y1="10"
							Y2="0" />
					</Grid>
				</controls:ExtendedButton>
				<!--#endregion-->
				<!--#region Link button helper-->
				<Border
					Grid.Column="2"
					Width="{Binding ElementName=LinkBankButton, Path=ActualHeight}"
					Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
					Margin="6,6,0,3"
					VerticalAlignment="Center"
					Background="{DynamicResource StatusTextLightBrush}"
					BorderThickness="0"
					CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}">
					<Border.Style>
						<Style>
							<Setter Property="ToolTipService.InitialShowDelay" Value="200" />
						</Style>
					</Border.Style>
					<Border.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
							<Binding
								Converter="{StaticResource BankLinkStatusIsConverterParameterConverter}"
								ConverterParameter="{x:Static models:BankLinkStatus.NotLinked}"
								Path="LinkStatus" />
						</MultiBinding>
					</Border.Visibility>
					<Border.ToolTip>
						<ToolTip Content="FinanceTracker uses the TrueLayer API to&#x0a;retrieve your banking data. This means:&#x0a; 1. Financetracker interacts with your bank&#x0a;     only through TrueLayer, so is incapable&#x0a;     of doing anything trusted TrueLayer&#x0a;     services can't do.&#x0a; 2. Permission is consent based which&#x0a;     can be easily revoked by you at any time.&#x0a;     Consent automtically times out after 90&#x0a;     days, after which it will have to be&#x0a;     renewed.&#x0a;Additionally, FinanceTracker uses a level of&#x0a;TrueLayer which is incapable of anything&#x0a;except interacting with the limited data your&#x0a;bank grants to TrueLayer. It cannot make or&#x0a;receive transactions.&#x0a;&#x0a;Note: TrueLayer does not have access to&#x0a;every account type, so it may be necessary&#x0a;to import some data manually from .CSV&#x0a;files downloaded from your online banking." Style="{StaticResource InfoTooltip}" />
					</Border.ToolTip>
					<Grid>
						<TextBlock
							Margin="0,-2,0,0"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							FontWeight="Bold"
							Foreground="{DynamicResource StatusTextBrush}"
							Text="?" />
					</Grid>
				</Border>
				<!--#endregion-->
				<!--#region Download data button-->
				<controls:ExtendedButton
					Grid.Column="3"
					Width="{Binding ElementName=LinkBankButton, Path=ActualHeight}"
					Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
					Margin="6,6,0,3"
					Padding="-3,-3"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					HorizontalContentAlignment="Stretch"
					VerticalContentAlignment="Stretch"
					Background="{DynamicResource ControlClickablePartBrush}"
					BorderThickness="0"
					Command="{Binding DownloadDataCommand}"
					CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
					Foreground="{DynamicResource StatusTextBrush}"
					MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
					MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}"
					ToolTip="Download bank data from TrueLayer">
					<controls:ExtendedButton.Visibility>
						<MultiBinding Converter="{StaticResource MultiBoolOrToVisibilityConverter}">
							<Binding
								Converter="{StaticResource BankLinkStatusIsConverterParameterConverter}"
								ConverterParameter="{x:Static models:BankLinkStatus.LinkVerified}"
								Path="LinkStatus" />
						</MultiBinding>
					</controls:ExtendedButton.Visibility>
					<Grid>
						<controls:CircularProgressBar
							Width="28"
							Height="28"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							IsHitTestVisible="False"
							IsIndeterminate="{Binding IsDownloadingData}"
							SegmentColor="{DynamicResource ThemeMouseOverBrush}"
							StrokeThickness="3" />
						<Grid
							Width="10"
							Height="13"
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
							<Border
								Width="10"
								Height="2"
								VerticalAlignment="Bottom"
								Background="{DynamicResource TextBrush}" />
							<Polygon
								Fill="{DynamicResource TextBrush}"
								Points="1.5,5 8.5,5, 5,9"
								Stroke="{DynamicResource TextBrush}" />
							<Border
								Width="3"
								Height="5"
								Margin="0,0,0,8"
								VerticalAlignment="Bottom"
								Background="{DynamicResource TextBrush}" />
						</Grid>
					</Grid>

				</controls:ExtendedButton>
				<!--#endregion-->
				<!--#region Separator-->
				<Border
					Grid.Column="4"
					Width="1"
					Margin="10,13,10,9"
					HorizontalAlignment="Left"
					Background="{DynamicResource ControlClickablePartBrush}" />
				<!--#endregion-->
				<!--#region Import data button-->
				<controls:ExtendedButton
					Grid.Column="5"
					Margin="0,6,0,3"
					Padding="10,3"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					Background="{DynamicResource ControlClickablePartBrush}"
					BorderThickness="0"
					CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, ConverterParameter=0.5, Converter={StaticResource ValueMultiplierConverter}}"
					Foreground="{DynamicResource StatusTextBrush}"
					MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
					MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}"
					ToolTip="Import data from .CSV">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Label
							Margin="0"
							Padding="0"
							Content="Import data"
							Foreground="{DynamicResource TextBrush}" />
					</Grid>
				</controls:ExtendedButton>
				<!--#endregion-->
			</Grid>
			<!--#endregion-->
		</Grid>
		<!--#endregion-->
		<!--#region Rest of form-->
		<Grid Grid.Row="2" VerticalAlignment="Stretch">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<ScrollViewer VerticalScrollBarVisibility="Auto">
					<Grid>
						<ItemsControl
							x:Name="ItemsControl"
							Focusable="False"
							ItemTemplate="{StaticResource MenuItemDataTemplate}"
							ItemsSource="{Binding ChildViewModels}" />
					</Grid>
				</ScrollViewer>
			</Grid>
			<!--#region Account view host-->
			<Grid
				Grid.Column="1"
				Focusable="False"
				IsHitTestVisible="{Binding VisibleAccount, Converter={StaticResource IsNotNullConverter}}">
				<Border Focusable="False" Visibility="{Binding VisibleAccount, Converter={StaticResource VisibleIfNotNullConverter}}">
					<Border.OpacityMask>
						<VisualBrush Visual="{Binding ElementName=Border1}" />
					</Border.OpacityMask>
					<Border.Effect>
						<DropShadowEffect
							BlurRadius="30"
							ShadowDepth="0"
							Color="Black" />
					</Border.Effect>
					<Border
						x:Name="Border1"
						Margin="10"
						Background="{DynamicResource MainBackgroundBrush}"
						CornerRadius="5"
						Focusable="False">
						<Grid>
							<Border
								Height="48"
								VerticalAlignment="Top"
								Background="{DynamicResource DisabledControlClickablePartBrush}"
								CornerRadius="5,5,0,0" />
							<ContentControl Content="{Binding Path=VisibleAccount, UpdateSourceTrigger=PropertyChanged}" Focusable="False" />
						</Grid>
					</Border>
				</Border>
				<!--#endregion-->
			</Grid>
		</Grid>
		<!--#endregion-->
	</Grid>
</UserControl>
