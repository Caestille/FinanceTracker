<UserControl
	x:Class="FinanceTracker.Views.MainView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:Win10Themables.Controls;assembly=Win10Themables"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:views="clr-namespace:FinanceTracker.Views"
	xmlns:vms="clr-namespace:FinanceTracker.Core.ViewModels;assembly=FinanceTracker.Core"
	d:DesignHeight="450"
	d:DesignWidth="800"
	mc:Ignorable="d">
	<UserControl.Resources>
		<DataTemplate DataType="{x:Type vms:BankViewModel}">
			<views:BankView />
		</DataTemplate>
		<DataTemplate x:Key="MenuItemDataTemplate" DataType="{x:Type vms:ViewModelBase}">
			<Grid>
				<StackPanel>
					<Grid>
						<controls:ExtendedButton
							x:Name="Button"
							Width="200"
							Height="40"
							Padding="{Binding Level, Converter={StaticResource LeftPaddingConverter}, ConverterParameter=15}"
							VerticalAlignment="Top"
							HorizontalContentAlignment="Left"
							Background="Transparent"
							BorderThickness="0"
							Command="{Binding SelectCommand}"
							Content="{Binding Name}"
							Foreground="{DynamicResource TextBrush}"
							MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
							MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}" />
						<Border
							x:Name="Border"
							Width="15"
							Height="{Binding ElementName=Border, Path=Width}"
							Margin="0,3,30,0"
							HorizontalAlignment="Right"
							Background="{DynamicResource ControlClickablePartBrush}"
							CornerRadius="{Binding ElementName=Border, Path=Width, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
							Opacity="0.3"
							Visibility="{Binding SupportsAddingChildren, Converter={StaticResource VisibleIfTrueConverter}}" />
						<Grid
							Width="{Binding ElementName=Border, Path=Width}"
							Height="{Binding ElementName=Border, Path=Width}"
							Margin="{Binding ElementName=Border, Path=Margin}"
							HorizontalAlignment="Right"
							Visibility="{Binding SupportsAddingChildren, Converter={StaticResource VisibleIfTrueConverter}}">
							<controls:ExtendedButton
								Background="Transparent"
								BorderThickness="0"
								Command="{Binding AddChildCommand}"
								CornerRadius="{Binding ElementName=Border, Path=Width, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
								MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
								MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}"
								Opacity="0.5" />
							<Grid Opacity="0.4">
								<Line
									x:Name="Line1"
									IsHitTestVisible="False"
									Stroke="{DynamicResource TextBrush}"
									StrokeThickness="2"
									X1="{Binding ElementName=Border, Path=Width, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
									X2="{Binding ElementName=Border, Path=Width, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
									Y1="3"
									Y2="{Binding ElementName=Border, Path=Width, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-3}" />
								<Line
									IsHitTestVisible="False"
									Stroke="{Binding ElementName=Line1, Path=Stroke}"
									StrokeThickness="{Binding ElementName=Line1, Path=StrokeThickness}"
									X1="3"
									X2="{Binding ElementName=Border, Path=Width, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-3}"
									Y1="{Binding ElementName=Border, Path=Width, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
									Y2="{Binding ElementName=Border, Path=Width, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
							</Grid>
						</Grid>
						<Grid
							Width="10"
							Height="10"
							Margin="0,3,15,0"
							HorizontalAlignment="Right"
							IsHitTestVisible="False"
							RenderTransformOrigin="0.5,0.5"
							Visibility="{Binding ChildViewModels, Converter={StaticResource SequenceHasElementsVisibilityConverter}}">
							<Grid.RenderTransform>
								<RotateTransform>
									<RotateTransform.Angle>
										<MultiBinding Converter="{StaticResource ValueIfTrueValueIfFalseConverter}">
											<Binding Path="IsShowingChildren" />
											<Binding ElementName="RotateGrid" Path="Margin.Left" />
											<Binding ElementName="RotateGrid" Path="Margin.Right" />
										</MultiBinding>
									</RotateTransform.Angle>
								</RotateTransform>
							</Grid.RenderTransform>
							<Line
								Stroke="{DynamicResource TextBrush}"
								StrokeThickness="1"
								X1="0"
								X2="5.1"
								Y1="2.5"
								Y2="7.6" />
							<Line
								Stroke="{DynamicResource TextBrush}"
								StrokeThickness="1"
								X1="4.9"
								X2="10"
								Y1="7.4"
								Y2="2.5" />
						</Grid>
						<Border
							Height="1"
							Margin="12,0"
							VerticalAlignment="Bottom"
							Background="{DynamicResource DisabledControlNonClickablePartBrush}" />
					</Grid>
					<Grid Visibility="{Binding IsShowingChildren, Converter={StaticResource VisibleIfTrueConverter}}">
						<Grid Background="White" Opacity="0.1" />
						<ItemsControl
							HorizontalAlignment="Right"
							VerticalAlignment="Bottom"
							ItemTemplate="{DynamicResource MenuItemDataTemplate}"
							ItemsSource="{Binding ChildViewModels, UpdateSourceTrigger=PropertyChanged}" />
					</Grid>
				</StackPanel>
				<Border
					Height="3"
					Margin="6,0"
					VerticalAlignment="Bottom"
					Background="{DynamicResource ThemeBrush}"
					CornerRadius="1"
					Visibility="{Binding IsSelected, Converter={StaticResource VisibleIfTrueConverter}}" />
				<!--#region Property store hacks-->
				<Grid
					x:Name="RotateGrid"
					Margin="180,0,0,0"
					Visibility="Collapsed" />
				<!--#endregion End property store hacks-->
			</Grid>
		</DataTemplate>
	</UserControl.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<ScrollViewer
			x:Name="ScrollViewer"
			Grid.Column="0"
			Width="200"
			HorizontalAlignment="Left"
			VerticalScrollBarVisibility="Auto">
			<Grid Background="{DynamicResource StatusTextLightBrush}">
				<ItemsControl
					x:Name="ItemsControl"
					Focusable="False"
					ItemTemplate="{StaticResource MenuItemDataTemplate}"
					ItemsSource="{Binding ChildViewModels}" />
			</Grid>
		</ScrollViewer>
		<ContentControl
			Grid.Column="1"
			Content="{Binding Path=VisibleViewModel, UpdateSourceTrigger=PropertyChanged}"
			Foreground="{DynamicResource TextBrush}" />
	</Grid>
</UserControl>
