<UserControl
	x:Class="FinanceTracker.Views.MainView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:controls="clr-namespace:Win10Themables.Controls;assembly=Win10Themables"
	xmlns:controls1="clr-namespace:CoreUtilities.Controls;assembly=CoreUtilities"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:views="clr-namespace:FinanceTracker.Views"
	xmlns:vms="clr-namespace:FinanceTracker.Core.ViewModels;assembly=FinanceTracker.Core"
	d:DesignHeight="450"
	d:DesignWidth="800"
	mc:Ignorable="d">
	<b:Interaction.Triggers>
		<b:EventTrigger EventName="Loaded">
			<b:InvokeCommandAction Command="{Binding FormLoadedCommand}" />
		</b:EventTrigger>
	</b:Interaction.Triggers>
	<UserControl.Resources>
		<DataTemplate DataType="{x:Type vms:BankViewModel}">
			<views:BankView />
		</DataTemplate>
		<DataTemplate DataType="{x:Type vms:DashboardViewModel}">
			<views:DashboardView />
		</DataTemplate>
		<DataTemplate DataType="{x:Type vms:AnalysisViewModel}">
			<views:AnalysisView />
		</DataTemplate>
		<DataTemplate DataType="{x:Type vms:BudgetingViewModel}">
			<views:BudgetingView />
		</DataTemplate>
		<Storyboard x:Key="MenuOpenAnimation">
			<ThicknessAnimation
				AutoReverse="False"
				Storyboard.TargetProperty="Margin"
				From="-250,0,0,0"
				To="0,0,0,0"
				Duration="0:0:0.1" />
		</Storyboard>
		<Storyboard x:Key="MenuCloseAnimation">
			<ThicknessAnimation
				AutoReverse="False"
				Storyboard.TargetProperty="Margin"
				From="0,0,0,0"
				To="-250,0,0,0"
				Duration="0:0:0.1" />
		</Storyboard>
		<!--#region  Search item data template-->
		<DataTemplate x:Key="SearchItemDataTemplate" DataType="{x:Type vms:ViewModelBase}">
			<Grid x:Name="MainGrid">
				<StackPanel>
					<!--#region Single item grid-->
					<Grid>
						<!--#region Divider-->
						<Border
							x:Name="Divider"
							Height="1"
							Margin="0,0,7,0"
							VerticalAlignment="Bottom"
							Background="{DynamicResource TextBrush}"
							Opacity="0.2" />
						<!--#endregion-->
						<!--#region Menu Item Button-->
						<Border>
							<controls:ExtendedButton
								x:Name="Button"
								Width="200"
								Height="40"
								Margin="0,-1,0,0"
								VerticalAlignment="Top"
								HorizontalContentAlignment="Left"
								Background="Transparent"
								BorderThickness="0"
								Command="{Binding SelectCommand}"
								Foreground="{DynamicResource TextBrush}"
								MouseDownColour="{DynamicResource MenuMouseDownBrush}"
								MouseOverColour="{DynamicResource MenuMouseOverBrush}" />
							<Border.Effect>
								<DropShadowEffect
									BlurRadius="30"
									Opacity="0.6"
									ShadowDepth="0"
									Color="{DynamicResource InvertedTextColour}" />
							</Border.Effect>
						</Border>
						<!--#endregion-->
						<!--#region Menu item contents-->
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Border
								Grid.Column="0"
								Width="33"
								Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
								MaxWidth="25"
								Margin="15,0,-5,0"
								Padding="4"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Background="{DynamicResource MainBackgroundBrush}"
								CornerRadius="5"
								IsHitTestVisible="False"
								Visibility="{Binding ElementName=Image, Path=Source, Converter={StaticResource VisibleIfNotNullConverter}}">
								<Image x:Name="Image" Source="{Binding Name, Converter={StaticResource BankNameIconConverter}}" />
							</Border>
							<Label
								Grid.Column="1"
								Padding="15,0,0,0"
								VerticalAlignment="Center"
								Content="{Binding Name}"
								Foreground="{DynamicResource TextBrush}"
								IsHitTestVisible="False" />
						</Grid>
						<!--#endregion-->
					</Grid>
					<!--#endregion-->
				</StackPanel>
				<Border
					Width="6"
					HorizontalAlignment="Left"
					Background="{DynamicResource ControlClickablePartBrush}"
					Opacity="1"
					Visibility="{Binding IsShowingChildren, Converter={StaticResource VisibleIfTrueConverter}}" />
			</Grid>
		</DataTemplate>
		<!--#endregion-->
		<!--#region  Menu item data template-->
		<DataTemplate x:Key="MenuItemDataTemplate" DataType="{x:Type vms:ViewModelBase}">
			<Grid x:Name="MainGrid">
				<StackPanel>
					<!--#region Single item grid-->
					<Grid>
						<!--#region Divider-->
						<Border
							x:Name="Divider"
							Height="1"
							Margin="0,0,7,0"
							VerticalAlignment="Bottom"
							Background="{DynamicResource TextBrush}"
							Opacity="0.2" />
						<!--#endregion-->
						<!--#region Menu Item Button-->
						<Border>
							<controls:ExtendedButton
								x:Name="Button"
								Width="200"
								Height="40"
								Margin="0,-1,0,0"
								VerticalAlignment="Top"
								HorizontalContentAlignment="Left"
								Background="Transparent"
								BorderThickness="0"
								Command="{Binding SelectCommand}"
								Foreground="{DynamicResource TextBrush}"
								MouseDownColour="{DynamicResource MenuMouseDownBrush}"
								MouseOverColour="{DynamicResource MenuMouseOverBrush}" />
							<Border.Effect>
								<DropShadowEffect
									BlurRadius="30"
									Opacity="0.6"
									ShadowDepth="0"
									Color="{DynamicResource InvertedTextColour}" />
							</Border.Effect>
						</Border>
						<!--#endregion-->
						<!--#region Menu item content-->
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Border
								Grid.Column="0"
								Width="33"
								Height="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"
								MaxWidth="25"
								Margin="16,0,-15,0"
								Padding="4"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Background="{DynamicResource MainBackgroundBrush}"
								CornerRadius="5"
								IsHitTestVisible="False"
								Visibility="{Binding ElementName=Image, Path=Source, Converter={StaticResource VisibleIfNotNullConverter}}">
								<Image x:Name="Image" Source="{Binding Name, Converter={StaticResource BankNameIconConverter}}" />
							</Border>
							<Label
								Grid.Column="1"
								Padding="{Binding Level, Converter={StaticResource LeftPaddingConverter}, ConverterParameter=15}"
								VerticalAlignment="Center"
								Content="{Binding Name}"
								Foreground="{DynamicResource TextBrush}"
								IsHitTestVisible="False" />
						</Grid>
						<!--#endregion-->
						<!--#region Add child button-->
						<controls:ExtendedButton
							Width="20"
							Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}"
							Margin="0,0,32,0"
							HorizontalAlignment="Right"
							HorizontalContentAlignment="Stretch"
							VerticalContentAlignment="Stretch"
							Background="{DynamicResource ControlClickablePartBrush}"
							BorderThickness="0"
							Command="{Binding AddChildCommand}"
							CornerRadius="{Binding RelativeSource={RelativeSource Self}, Path=Width, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
							MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
							MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}"
							Opacity="0.7"
							SnapsToDevicePixels="True"
							ToolTip="Add"
							Visibility="{Binding SupportsAddingChildren, Converter={StaticResource VisibleIfTrueConverter}}">
							<!--#region Button icon-->
							<Grid Margin="-1">
								<Line
									IsHitTestVisible="False"
									Stroke="{DynamicResource StatusTextBrush}"
									StrokeThickness="2"
									X1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
									X2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
									Y1="3"
									Y2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-3}" />
								<Line
									IsHitTestVisible="False"
									Stroke="{DynamicResource StatusTextBrush}"
									StrokeThickness="2"
									X1="3"
									X2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-3}"
									Y1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}"
									Y2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
							</Grid>
							<!--#endregion-->
						</controls:ExtendedButton>
						<!--#endregion-->
						<!--#region Drop down indicator-->
						<Grid
							Width="10"
							Height="10"
							Margin="0,3,15,0"
							HorizontalAlignment="Right"
							IsHitTestVisible="False"
							RenderTransformOrigin="0.5,0.5">
							<Grid.Visibility>
								<MultiBinding Converter="{StaticResource MultiBoolAndToVisibilityConverter}">
									<Binding Converter="{StaticResource SequenceHasElementsBooleanConverter}" Path="ChildViewModels" />
									<Binding Path="SupportsAddingChildren" />
								</MultiBinding>
							</Grid.Visibility>
							<Grid.RenderTransform>
								<RotateTransform>
									<RotateTransform.Angle>
										<MultiBinding Converter="{StaticResource ValueIfTrueValueIfFalseConverter}">
											<Binding Path="IsShowingChildren" />
											<Binding ElementName="RotateGrid" Path="Margin.Left" />
											<Binding ElementName="RotateGrid" Path="Margin.Right" />
										</MultiBinding>
									</RotateTransform.Angle>
								</RotateTransform>
							</Grid.RenderTransform>
							<Line
								Stroke="{DynamicResource TextBrush}"
								StrokeThickness="1"
								X1="0"
								X2="5.1"
								Y1="2.5"
								Y2="7.6" />
							<Line
								Stroke="{DynamicResource TextBrush}"
								StrokeThickness="1"
								X1="4.9"
								X2="10"
								Y1="7.4"
								Y2="2.5" />
						</Grid>
						<!--#endregion-->
						<!--#region Delete button-->
						<controls:ExtendedButton
							Width="20"
							Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}"
							Margin="10,0"
							HorizontalAlignment="Right"
							VerticalAlignment="Center"
							Background="{DynamicResource ControlClickablePartBrush}"
							BorderThickness="0"
							Command="{Binding RequestDeleteCommand}"
							CornerRadius="12.5"
							MouseDownColour="{DynamicResource ControlClickablePartMouseDownBrush}"
							MouseOverColour="{DynamicResource ControlClickablePartMouseOverBrush}"
							Opacity="0.7"
							ToolTip="Delete"
							Visibility="{Binding SupportsDeleting, Converter={StaticResource VisibleIfTrueConverter}}">
							<controls:ExtendedButton.Style>
								<Style TargetType="{x:Type controls:ExtendedButton}">
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="False">
											<Setter Property="Background" Value="White" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</controls:ExtendedButton.Style>
							<Grid>
								<Border
									Width="8"
									Height="9"
									Margin="0,5,0,0"
									Background="{DynamicResource StatusTextBrush}"
									BorderBrush="{DynamicResource StatusTextBrush}"
									BorderThickness="2"
									CornerRadius="0,0,1,1" />
								<Border
									Width="12"
									Height="2"
									Margin="0,2,0,0"
									VerticalAlignment="Top"
									BorderBrush="{DynamicResource StatusTextBrush}"
									BorderThickness="2"
									CornerRadius="0,0,3,3" />
								<Border
									Width="4"
									Height="2"
									Margin="0,0,0,0"
									VerticalAlignment="Top"
									BorderBrush="{DynamicResource StatusTextBrush}"
									BorderThickness="2"
									CornerRadius="0,0,3,3" />
							</Grid>
						</controls:ExtendedButton>
						<!--#endregion-->
						<!--#region Selection indicator-->
						<Border
							Width="6"
							Margin="0,3,0,4"
							HorizontalAlignment="Left"
							Background="{DynamicResource ThemeBrush}"
							CornerRadius="0,5,5,0"
							Visibility="{Binding IsSelected, Converter={StaticResource VisibleIfTrueConverter}, UpdateSourceTrigger=PropertyChanged}" />
						<!--#endregion-->
					</Grid>
					<!--#endregion-->
					<!--#region Child items-->
					<Grid Margin="6,0,0,0" Visibility="{Binding IsShowingChildren, Converter={StaticResource VisibleIfTrueConverter}}">
						<Grid Background="{DynamicResource TextBrush}" Opacity="0.1" />
						<ItemsControl
							HorizontalAlignment="Right"
							VerticalAlignment="Bottom"
							ItemTemplate="{DynamicResource MenuItemDataTemplate}"
							ItemsSource="{Binding ChildViewModels, UpdateSourceTrigger=PropertyChanged}" />
					</Grid>
					<!--#endregion-->
				</StackPanel>
				<!--#region Property store hacks-->
				<Grid
					x:Name="RotateGrid"
					Margin="180,0,0,0"
					Visibility="Collapsed" />
				<!--#endregion End property store hacks-->
				<!--#region Linked items-->
				<Border
					Width="6"
					HorizontalAlignment="Left"
					Background="{DynamicResource ControlClickablePartBrush}"
					Opacity="1"
					Visibility="{Binding IsShowingChildren, Converter={StaticResource VisibleIfTrueConverter}}" />
				<!--#endregion-->
			</Grid>
		</DataTemplate>
		<!--#endregion End property store hacks-->
	</UserControl.Resources>
	<Grid>
		<!--#region Open menu button-->
		<controls:ExtendedButton
			x:Name="MenuOpenButton"
			Grid.Column="0"
			Width="30"
			Height="30"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Background="Transparent"
			BorderThickness="0"
			Command="{Binding ToggleMenuOpenCommand}"
			CornerRadius="5"
			Foreground="{DynamicResource TextBrush}"
			MouseDownColour="Transparent"
			MouseOverColour="Transparent">
			<!--#region  Button icon-->
			<Grid Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth}" Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualHeight, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-3}">
				<Grid.Background>
					<SolidColorBrush Opacity="0.01" Color="Black" />
				</Grid.Background>
				<Grid.Style>
					<Style TargetType="{x:Type Grid}">
						<Style.Triggers>
							<Trigger Property="IsMouseOver" Value="False">
								<Setter Property="Opacity" Value="0.5" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>
				<Border
					Height="3"
					Margin="3,3,5,5"
					VerticalAlignment="Top"
					Background="{DynamicResource MenuMouseDownBrush}"
					CornerRadius="2" />
				<Border
					Height="3"
					Margin="3,3,5,5"
					VerticalAlignment="Center"
					Background="{DynamicResource MenuMouseDownBrush}"
					CornerRadius="2">
					<Border.RenderTransform>
						<RotateTransform CenterX="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" CenterY="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
					</Border.RenderTransform>
				</Border>
				<Border
					Height="3"
					Margin="3,3,5,5"
					VerticalAlignment="Bottom"
					Background="{DynamicResource MenuMouseDownBrush}"
					CornerRadius="2" />
			</Grid>
			<!--#endregion-->
		</controls:ExtendedButton>
		<!--#endregion-->
		<!--#region Main content control-->
		<ContentControl
			x:Name="ContentControl"
			Grid.Column="1"
			Content="{Binding Path=VisibleViewModel, UpdateSourceTrigger=PropertyChanged}"
			Focusable="False"
			Foreground="{DynamicResource TextBrush}">
			<ContentControl.Style>
				<Style>
					<Style.Triggers>
						<DataTrigger Binding="{Binding IsMenuPinned}" Value="False">
							<Setter Property="ContentControl.Margin" Value="35 0 0 0" />
						</DataTrigger>
						<DataTrigger Binding="{Binding IsMenuPinned}" Value="True">
							<Setter Property="ContentControl.Margin" Value="200 0 0 0" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</ContentControl.Style>
		</ContentControl>
		<!--#endregion-->
		<!--#region Navigation menu-->
		<Border
			x:Name="SettingsBorder"
			Width="199"
			Margin="0,0,0,0"
			HorizontalAlignment="Left"
			Background="{DynamicResource MenuBrush}">
			<Border.Style>
				<Style>
					<Style.Triggers>
						<DataTrigger Binding="{Binding IsMenuOpen}" Value="True">
							<DataTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource MenuOpenAnimation}" />
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource MenuCloseAnimation}" />
							</DataTrigger.ExitActions>
						</DataTrigger>
						<DataTrigger Binding="{Binding IsMenuPinned}" Value="False">
							<Setter Property="Border.CornerRadius" Value="0 10 10 0" />
							<Setter Property="Border.Effect">
								<Setter.Value>
									<DropShadowEffect
										x:Name="SettingsShadow"
										BlurRadius="50"
										Opacity="0.7"
										ShadowDepth="0"
										Color="Black" />
								</Setter.Value>
							</Setter>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Border.Style>
			<Border.Clip>
				<RectangleGeometry Rect="0,0,10000,10000" />
			</Border.Clip>
			<Grid>
				<!--#region Background and items host-->
				<controls1:BlurHost
					x:Name="Blurrer"
					BlurBackground="{Binding ElementName=ContentControl}"
					BlurEnabled="{Binding IsMenuPinned, Converter={StaticResource BoolInverter}}"
					BlurOpacity="0.5"
					Focusable="False"
					OffsetX="0"
					OffsetY="30"
					PreventResample="{Binding IsMenuOpen, Converter={StaticResource BoolInverter}}">
					<controls1:BlurHost.Clip>
						<RectangleGeometry Rect="0,0,200,10000" />
					</controls1:BlurHost.Clip>
					<ScrollViewer Margin="0,35,0,0" VerticalScrollBarVisibility="Auto">
						<Grid>
							<!--#region Divider-->
							<Border
								Height="1"
								Margin="0,0,7,0"
								VerticalAlignment="Top"
								Background="{DynamicResource TextBrush}"
								Opacity="0.2" />
							<!--#endregion-->
							<Border
								x:Name="SearchResultsVisibilityBorder"
								Width="1"
								Height="1"
								Visibility="{Binding FilteredViewModels, Converter={StaticResource SequenceHasElementsVisibilityConverter}}" />
							<TextBlock
								Margin="16,5,5,5"
								Foreground="{DynamicResource TextBrush}"
								Text="No Results"
								Visibility="{Binding ElementName=SearchResultsVisibilityBorder, Path=Visibility, Converter={StaticResource VisibilityInverterConverter}}" />
							<!--#region Navigation menu item controls-->
							<ItemsControl
								x:Name="ItemsControl"
								Focusable="False"
								ItemTemplate="{StaticResource MenuItemDataTemplate}"
								ItemsSource="{Binding ChildViewModels}"
								Visibility="{Binding ElementName=ItemsControlSearch, Path=Visibility, Converter={StaticResource VisibilityInverterConverter}}" />
							<ItemsControl
								x:Name="ItemsControlSearch"
								Focusable="False"
								ItemTemplate="{StaticResource SearchItemDataTemplate}"
								ItemsSource="{Binding FilteredViewModels, UpdateSourceTrigger=PropertyChanged}"
								Visibility="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource StringNotEmptyVisibilityConverter}}" />
							<!--#endregion-->
						</Grid>
					</ScrollViewer>
				</controls1:BlurHost>
				<!--#endregion-->
				<!--#region Menu controls-->
				<Grid VerticalAlignment="Top">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>
					<!--#region Close menu button-->
					<controls:ExtendedButton
						x:Name="MenuCloseButton"
						Grid.Column="0"
						Width="30"
						Height="30"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Background="Transparent"
						BorderThickness="0"
						Command="{Binding ToggleMenuOpenCommand}"
						CornerRadius="5"
						Foreground="{DynamicResource TextBrush}"
						MouseDownColour="Transparent"
						MouseOverColour="Transparent"
						Visibility="{Binding IsMenuPinned, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibleIfFalseConverter}}">
						<!--#region  Button icon-->
						<Grid Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth}" Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualHeight, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-3}">
							<Grid.Background>
								<SolidColorBrush Opacity="0.01" Color="Black" />
							</Grid.Background>
							<Grid.Style>
								<Style TargetType="{x:Type Grid}">
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="False">
											<Setter Property="Opacity" Value="0.5" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</Grid.Style>
							<Border
								Height="2"
								Margin="3,3,5,5"
								VerticalAlignment="Center"
								Background="{DynamicResource MenuMouseDownBrush}"
								CornerRadius="2"
								Tag="Border2">
								<Border.RenderTransform>
									<RotateTransform Angle="45" CenterX="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" CenterY="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
								</Border.RenderTransform>
							</Border>
							<Border
								Height="2"
								Margin="3,3,5,5"
								VerticalAlignment="Center"
								Background="{DynamicResource MenuMouseDownBrush}"
								CornerRadius="2"
								Tag="Border3">
								<Border.RenderTransform>
									<RotateTransform Angle="-45" CenterX="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" CenterY="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.5}" />
								</Border.RenderTransform>
							</Border>
						</Grid>
						<!--#endregion-->
					</controls:ExtendedButton>
					<!--#endregion-->
					<!--#region Pin menu button-->
					<controls:ExtendedButton
						x:Name="ToggleMenuPinButton"
						Grid.Column="1"
						Width="30"
						Height="30"
						HorizontalAlignment="Left"
						VerticalAlignment="Top"
						Background="Transparent"
						BorderThickness="0"
						Command="{Binding ToggleMenuPinCommand}"
						CornerRadius="5"
						Foreground="{DynamicResource TextBrush}"
						MouseDownColour="Transparent"
						MouseOverColour="Transparent">
						<!--#region Button icon-->
						<Grid
							Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth}"
							Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualHeight}"
							Margin="0,-1,0,0">
							<Grid.Background>
								<SolidColorBrush Opacity="0.01" Color="Black" />
							</Grid.Background>
							<Grid.Style>
								<Style TargetType="{x:Type Grid}">
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="False">
											<Setter Property="Opacity" Value="0.5" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</Grid.Style>
							<Line
								Stroke="{DynamicResource MenuMouseDownBrush}"
								StrokeEndLineCap="Triangle"
								StrokeThickness="2"
								X1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-10}"
								X2="7"
								Y1="10"
								Y2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-7}" />
							<Line
								Stroke="{DynamicResource MenuMouseDownBrush}"
								StrokeEndLineCap="Triangle"
								StrokeThickness="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.4}"
								X1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.4}"
								X2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.45}"
								Y1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.6}"
								Y2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.55}" />
							<Line
								Stroke="{DynamicResource MenuMouseDownBrush}"
								StrokeThickness="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.2}"
								X1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.4}"
								X2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.7}"
								Y1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.6}"
								Y2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.3}" />
							<Line
								Stroke="{DynamicResource MenuMouseDownBrush}"
								StrokeThickness="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ExtendedButton}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.27}"
								X1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.6}"
								X2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-9}"
								Y1="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Converter={StaticResource ValueMultiplierConverter}, ConverterParameter=0.4}"
								Y2="9" />
							<Grid Tag="DisablePinLine" Visibility="{Binding IsMenuPinned, Converter={StaticResource VisibleIfTrueConverter}}">
								<Line
									Stroke="{DynamicResource MenuBrush}"
									StrokeThickness="6"
									X1="5"
									X2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-5}"
									Y1="5"
									Y2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-5}" />
								<Line
									Stroke="{DynamicResource MenuMouseDownBrush}"
									StrokeThickness="1.5"
									X1="7"
									X2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualWidth, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-7}"
									Y1="7"
									Y2="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Converter={StaticResource ValueAdderConverter}, ConverterParameter=-7}" />
							</Grid>
						</Grid>
						<!--#endregion-->
					</controls:ExtendedButton>
					<!--#endregion-->
					<!--#region  Searchbox-->
					<Border
						x:Name="SearchBorder"
						Grid.Column="2"
						Height="20"
						Margin="8,6,5,5"
						VerticalAlignment="Center">
						<Grid>
							<Border
								Background="{DynamicResource TextBrush}"
								CornerRadius="5"
								Opacity="0.1" />
							<TextBox
								Padding="20,1,0,0"
								BorderThickness="0"
								Foreground="{DynamicResource TextBrush}"
								Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
								<TextBox.Background>
									<SolidColorBrush Opacity="0.01" Color="Black" />
								</TextBox.Background>
							</TextBox>
							<Grid
								Width="20"
								HorizontalAlignment="Left"
								IsHitTestVisible="False">
								<Border
									Width="11"
									Height="11"
									Margin="2"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Background="Transparent"
									BorderBrush="{DynamicResource MenuMouseDownBrush}"
									BorderThickness="1"
									CornerRadius="5.5" />
								<Line
									Stroke="{DynamicResource MenuMouseDownBrush}"
									StrokeThickness="1.5"
									X1="11"
									X2="17"
									Y1="11"
									Y2="17" />
							</Grid>
						</Grid>
					</Border>
					<!--#endregion-->
				</Grid>
				<!--#endregion-->
			</Grid>
		</Border>
		<!--#endregion-->
	</Grid>
</UserControl>